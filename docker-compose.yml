version: '2.6'

services:

  nginx:
    container_name: nginx1.21
    image: ccr.ccs.tencentyun.com/tcb-87669051-ffhh/nginx:v20210707
    ports:
      # - "80:80"
      # - "443:443"
      - "9002:9002"
      - "9003:9003"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/nginx/conf.d:/etc/nginx/conf.d/:ro,cached
      - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro,cached
      - ./log/nginx/:/var/log/nginx/:rw,cached
    links:
      - php73:php73
      # - php56:fpm56
    environment:
      - TZ=Asia/Shanghai
    networks:
      docker_net:
        ipv4_address: ${NGINX_IP}

    
  php73:
    container_name: php73
    # build: ./php/php73/
    image: ccr.ccs.tencentyun.com/tcb-87669051-ffhh/php73:v0707
    expose:
      - "9000"
    volumes:
      - ${WORKSPACES}:/var/www/html/:rw,cached
      - ./conf/php/php73.ini:/usr/local/etc/php/php.ini:ro,cached
      - ./conf/php/php-fpm.d/www73.conf:/usr/local/etc/php-fpm.d/www.conf:rw,cached
      - ./log/php-fpm/:/var/log/php-fpm/:rw,cached
      - ./conf/certs/:/var/certs/:ro,cached
    links:
      # - mysql5:mysql
      - mysql8:mysql
      # - redis:redis
    networks:
      docker_net:
        ipv4_address: ${PHP73_IP}


  # mysql5:
  #   container_name: mysql5.6
  #   # image: mysql:5.6
  #   image: ccr.ccs.tencentyun.com/tcb-87669051-ffhh/mysql:v0707-5.6
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ./conf/mysql/my.cnf:/etc/mysql/my.cnf:ro,cached
  #     - ./mysql5-data/:/var/lib/mysql/:rw,cached
  #     - ./log/mysql5/:/var/log/mysql/:rw,cached
  #   environment:
  #     MYSQL_ROOT_PASSWORD: "root123456"
  #   networks:
  #     docker_net:
  #       ipv4_address: ${MYSQL_IP}

  mysql8:
    container_name: mysql8.0
    image: ccr.ccs.tencentyun.com/tcb-saas/mysql8:v0719
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./conf/mysql8/my.cnf:/etc/mysql/my.cnf
      - ./mysql8-data/:/var/lib/mysql
      - ./log/mysql8/:/var/log/mysql/:rw,cached
    environment:
      TZ: 'Asia/Shanghai'
      MYSQL_ROOT_PASSWORD: 'root123456'
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'pass'
    networks:
      docker_net:
        ipv4_address: ${MYSQL8_IP}


  # redis:
  #   container_name: redis6.2
  #   # image: redis:latest
  #   image: ccr.ccs.tencentyun.com/tcb-87669051-ffhh/redis:v0707
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     docker_net:
  #       ipv4_address: ${REDIS_IP}


  portainer:
    container_name: portainer1.24
    # image: portainer/portainer:latest
    image: ccr.ccs.tencentyun.com/tcb-87669051-ffhh/portainer:v0707
    ports:
      - "9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:cached
      - ./portainer/:/data:cached
    networks:
      docker_net:
        ipv4_address: ${PORTAINER_IP}


  strapi:
    container_name: strapi3.6
    # image: strapi/strapi
    # build: ./strapi-app/

    # develop版本，每次启动时需要webpack编译一次
    image: ccr.ccs.tencentyun.com/tcb-saas/strapi:v20210818 

    # product版本，已完成编译build，直接启动
    # image: ccr.ccs.tencentyun.com/tcb-saas/strapi:v20210819

    # environment:
    #   - DATABASE_CLIENT=mysql
    #   - DATABASE_HOST=mysql8
    #   - DATABASE_PORT=3306
    #   - DATABASE_NAME=db
    #   - DATABASE_USERNAME=user
    #   - DATABASE_PASSWORD=pass
    ports:
      - 9005:1337
    links:
      - mysql8:mysql8
    volumes:
      # - ./app:/srv/app
      - ./strapi/conf:/srv/app/config:rw,cached
    depends_on:
      - mysql8
    networks:
      docker_net:
        ipv4_address: ${STRAPI_IP}


  nodejs:
    container_name: nodejs16
    # image: ccr.ccs.tencentyun.com/tcb-87669051-ffhh/nginx:v20210707
    build: ./nodejs/
    ports:
      # - "80:80"
      # - "443:443"
      - "9101:9101"
      - "9102:9102"
    volumes:
      - ./nodejs/app:/srv/app:rw,cached
      - ./conf/nodejs:/etc/nodejs:ro,cached
      - ./log/nodejs/:/var/log/nodejs/:rw,cached
    links:
      - php73:php73
    environment:
      - TZ=Asia/Shanghai
    networks:
      docker_net:
        ipv4_address: ${NODEJS_IP}


networks:
  docker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: "${DOCKER_SUBNET}"
